q1:Write a program that returns the max occured character in the given line of input 
   ascii for space is 32
   
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
int main()
{
   int count[127]={0};
   char *s;int max=0;char q;
   s=(char *)malloc(sizeof(char)*30);
   gets(s);
   for(int i=0;s[i]!='\0';i++)
   {
       count[(int)s[i]]++;
       
   }
   for(int j=0;s[j]!='\0';j++)
   {
    if(count[(int)s[j]]>max)
      {
          max=count[(int)s[j]];
          q=s[j];
      }
   }

    printf("The char mos rep is %c",q);
}   
   OR
   
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
int main()
{
 
   char *s;
   s=(char *)malloc(sizeof(char));
   gets(s);
   int n=strlen(s);char q;
   s[n]=' ';int count=0;int max=count;
   for(int i=0;i<n;i++,count=0)
   {
       for(int j=0;j<=n;j++)
       {
           if(s[i]==s[j])
           {
               count++;
               
           }
       }
      
      if(count>max)
      {
          max=count;
          q=s[i];
      }
   }

    printf("The char mos rep is %c",q);
    return 0;
}

   
   
 2. Write a program that returns the word count in a given sentence 
   ascii for space is 32
 input:every exampl is unique in its way
 output : 7
 
 
 #include <stdio.h>
#include <string.h>
#include <stdlib.h>
int main()
{
 
   char *s;
   s=(char *)malloc(sizeof(char));
   gets(s);
   int n=strlen(s);char q;
   s[n]=' ';int count=0;int max=count;
   for(int i=0;i<n;i++,count=0)
   {
       for(int j=0;j<=n;j++)
       {
           if(s[i]==s[j])
           {
               count++;
               
           }
       }
      
      if(count>max)
      {
          max=count;
          q=s[i];
      }
   }

    printf("The char mos rep is %c",q);
    return 0;
}

3  Number game  :: Input an element ( string, number etc) and if the input is a number 
then accept, if the input is "done" then stop  accepting, 
otherwise accept the next element and so on.
Use the ele,ent "done" to stop accepting input and return the largest
 and smallest element recieved 

Sample input pattern    111 345 hello  356 678 111 999 bye 165 done
output: the smallest is 111 the largest is 999

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
int main()
{
    char *s;int num;
    int max=0;
    int min=0;
    s=(char *)malloc(sizeof(char)*30);
    while(1)
    {
        gets(s);
        
        
        
        
        if(strcmp(s,"done")==0)
        break;
        num=atoi(s);
    
        if(num>max)
        {
            max=num;
        }
        if(num<min)
        {
            min=num;
        }
        
    }
    printf("%d",max);
    printf("%d",min);
}
